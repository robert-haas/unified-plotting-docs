{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Settings\n",
    "\n",
    "This [Jupyter notebook](https://jupyter.org) provides an overview of settings accepted by (most) plotting functions of [unified-plotting](https://pypi.org/project/unified-plotting). Note that not every argument might have effect in each plot type, e.g. ``marker_size`` is silently ignored if a plot does use any markers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import unified_plotting as up"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Random dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import random\n",
    "\n",
    "n = 50\n",
    "counter = [i for i in range(n+1)]\n",
    "vec1 = [5 + random()*35 for i in range(n+1)]\n",
    "vec2 = [25 + random()*20 for i in range(n+1)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Default settings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.matplotlib.scatter(\n",
    "    x=[counter, counter],\n",
    "    y=[vec1, vec2],\n",
    "    name=['Random variable 1', 'Random variable 2'],\n",
    "    show_line=True,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=[counter, counter],\n",
    "    y=[vec1, vec2],\n",
    "    name=['Random variable 1', 'Random variable 2'],\n",
    "    show_line=True,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Manual settings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "argument_dict = dict(\n",
    "    # Plot size, resolution and margins (mm overrules inch overrules points)\n",
    "    height_mm=150,\n",
    "    height_in=1,\n",
    "    height_pt=1,\n",
    "    width_mm=150,\n",
    "    width_in=1,\n",
    "    width_pt=1,\n",
    "    dpi=300,\n",
    "    margin_auto=False,\n",
    "    margin_left_mm=20,\n",
    "    margin_left_in=None,\n",
    "    margin_left_pt=None,\n",
    "    margin_left_rel=None,\n",
    "    margin_right_mm=10,\n",
    "    margin_right_in=None,\n",
    "    margin_right_pt=None,\n",
    "    margin_right_rel=None,\n",
    "    margin_top_mm=10,\n",
    "    margin_top_in=None,\n",
    "    margin_top_pt=None,\n",
    "    margin_top_rel=None,\n",
    "    margin_bottom_mm=20,\n",
    "    margin_bottom_in=None,\n",
    "    margin_bottom_pt=None,\n",
    "    margin_bottom_rel=None,\n",
    "    \n",
    "    # Plot background color\n",
    "    plot_background_color='#dedede',\n",
    "    paper_background_color='white',\n",
    "    \n",
    "    # Plot title\n",
    "    show_title=True,\n",
    "    title='Two uniformly distributed random variables',\n",
    "    title_font='mono',\n",
    "    title_size=10,\n",
    "    title_color='black',\n",
    "    title_position='center',\n",
    "    \n",
    "    # x-Axis\n",
    "    show_x_axis=True,\n",
    "    x_axis_color=None,\n",
    "    x_axis_scale='lin',\n",
    "    x_axis_range=[-1, n+1],\n",
    "    x_axis_offset=0,\n",
    "    # x-Axis spine\n",
    "    show_x_spine=False,\n",
    "    x_spine_color='white',\n",
    "    # x-Axis title\n",
    "    show_x_title=True,\n",
    "    x_title='My x-Axis title',\n",
    "    x_title_font='mono',\n",
    "    x_title_size=10,\n",
    "    x_title_color='white',\n",
    "    x_title_offset=0,\n",
    "    # x-Axis ticks\n",
    "    show_x_tick=True,\n",
    "    x_tick_color='white',\n",
    "    x_tick_position=list(range(0, n+1, 5)),\n",
    "    x_tick_direction='out',\n",
    "    x_tick_length=5,\n",
    "    x_tick_width=1,\n",
    "    # x-Axis labels\n",
    "    show_x_label=True,\n",
    "    x_label_font='mono',\n",
    "    x_label_size=8,\n",
    "    x_label_color='gray',\n",
    "    x_label_offset=0,\n",
    "    x_label_rotation=30,\n",
    "    \n",
    "    # y-Axis\n",
    "    show_y_axis=True,\n",
    "    y_axis_color=None,\n",
    "    y_axis_scale='lin',\n",
    "    y_axis_range=[-1, n+1],\n",
    "    y_axis_offset=0,\n",
    "    # y-Axis spine\n",
    "    show_y_spine=True,\n",
    "    y_spine_color='white',\n",
    "    # y-Axis title\n",
    "    show_y_title=True,\n",
    "    y_title='My y-Axis title',\n",
    "    y_title_font='mono',\n",
    "    y_title_size=10,\n",
    "    y_title_color='white',\n",
    "    y_title_offset=0,\n",
    "    # y-Axis ticks\n",
    "    show_y_tick=True,\n",
    "    y_tick_color='white',\n",
    "    y_tick_position=list(range(0, n+1, 5)),\n",
    "    y_tick_direction='out',\n",
    "    y_tick_length=4,\n",
    "    y_tick_width=1,\n",
    "    # y-Axis labels\n",
    "    show_y_label=True,\n",
    "    y_label_font='mono',\n",
    "    y_label_size=8,\n",
    "    y_label_color='gray',\n",
    "    y_label_offset=0,\n",
    "    y_label_rotation=30,\n",
    "    \n",
    "    # x-Grid\n",
    "    show_x_grid=True,\n",
    "    x_grid_color='white',\n",
    "    x_grid_width=1.0,\n",
    "    x_grid_style='solid',\n",
    "    \n",
    "    # y-Grid\n",
    "    show_y_grid=True,\n",
    "    y_grid_color='white',\n",
    "    y_grid_width=1.0,\n",
    "    y_grid_style='solid',\n",
    "    \n",
    "    # Legend\n",
    "    show_legend=True,\n",
    "    legend_title='Shown data:',\n",
    "    legend_color='black',\n",
    "    legend_size=9,\n",
    "    legend_font='mono',\n",
    "    legend_background_color='#dedede',\n",
    "    legend_position_horizontal='left',\n",
    "    legend_position_vertical='bottom',\n",
    "    legend_border_color='black',\n",
    "    legend_border_size=1,\n",
    "    legend_marker_size=9,\n",
    "    \n",
    "    # Colormap\n",
    "    show_colormap=True,\n",
    "    colormap='coolwarm',\n",
    "    colormap_reversed=False,\n",
    "    colormap_label_font='mono',\n",
    "    colormap_label_size=9,\n",
    "    colormap_label_color='black',\n",
    "    colormap_border_size=0.5,\n",
    "    \n",
    "    # Markers\n",
    "    show_marker=True,\n",
    "    marker_color=['xkcd.blueberry', 'xkcd.strawberry'],\n",
    "    marker_colormap=None,\n",
    "    marker_size=4,\n",
    "    marker_style=['+', 'x'],\n",
    "    marker_opacity=1.0,\n",
    "\n",
    "    # Lines\n",
    "    show_line=True,\n",
    "    line_color=['xkcd.blueberry', 'xkcd.strawberry'],\n",
    "    line_width=1.2,\n",
    "    line_style='solid',\n",
    "    line_opacity=1.0,\n",
    "    \n",
    "    # Error bars and band\n",
    "    show_x_error_bar=True,\n",
    "    x_error_bar_color=None,\n",
    "    x_error_bar_line_width=None,\n",
    "    x_error_bar_size=3,\n",
    "\n",
    "    show_y_error_bar=True,\n",
    "    y_error_bar_color=None,\n",
    "    y_error_bar_line_width=None,\n",
    "    y_error_bar_size=3,\n",
    "\n",
    "    show_y_error_band=False,\n",
    "    y_error_band_color=None,\n",
    "    y_error_band_opacity=0.25,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.matplotlib.scatter( \n",
    "    x=[counter, counter],\n",
    "    y=[vec1, vec2],\n",
    "    name=['Random variable 1', 'Random variable 2'],\n",
    "    **argument_dict,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=[counter, counter],\n",
    "    y=[vec1, vec2],\n",
    "    name=['Random variable 1', 'Random variable 2'],\n",
    "    **argument_dict,\n",
    ")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
