{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plots with Plotly\n",
    "\n",
    "This [Jupyter notebook](https://jupyter.org) provides an overview of all plotting functions of [unified-plotting](https://pypi.org/project/unified-plotting) that are available in the subpackage `unified_plotting.plotly`. As the name indicates, they use [Plotly](https://plotly.com/python) to create visualizations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import unified_plotting as up"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dataset 1: Numerical vector data\n",
    "\n",
    "The following is a vector data set consisting of six vectors with the names ``u`` to ``z``. Each vector has ``n=100`` entries that are generated by repeatedly drawing random numbers from some distribution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "import random\n",
    "\n",
    "random.seed(42)\n",
    "\n",
    "n = 100\n",
    "u = [random.gauss(mu=0, sigma=1) for i in range(n)]\n",
    "v = [2.0 + 3.0*val + 2.0*random.gauss(mu=0, sigma=1) for val in u]\n",
    "w = [val1 - 1.5*val2 + random.gauss(mu=0.2, sigma=0.5) for val1, val2 in zip(u, v)]\n",
    "x = [random.lognormvariate(mu=0, sigma=1) for i in range(n)]\n",
    "y = [random.expovariate(lambd=0.5) for i in range(n)]\n",
    "z = [random.paretovariate(alpha=2.0) for i in range(n)]\n",
    "\n",
    "variable_names = ['u: normal 1', 'v: normal 2', 'w: normal 3','x: log normal', 'y: exponential', 'z: pareto']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2-dimensional plots\n",
    "\n",
    "The following shows plotting functions that accept two vectors via the arguments ``x`` and ``y``, as well as some optional arguments to modify plot appearance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.bar(\n",
    "    x=range(len(u)),\n",
    "    y=u,\n",
    "    x_title='Item number',\n",
    "    y_title='Absolute value',\n",
    "    x_label_rotation=90,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.bar(\n",
    "    x=[range(len(x)), range(len(y))],\n",
    "    y=[x, y],\n",
    "    x_title='Absolute value',\n",
    "    y_title='Item number',\n",
    "    x_label_rotation=90,\n",
    "    orientation='horizontal',\n",
    "    name=['x: log normal distribution', 'y: exponential distribution',],\n",
    "    legend_position_horizontal='right',\n",
    "    legend_position_vertical='bottom',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.plotly.density_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.density_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='svc.green1',\n",
    "    smoothing=1.3,\n",
    "    show_contour_label=True,\n",
    "    contour_label_color='white',\n",
    "    contour_label_size=7,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.density_scatter_histogram_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    marker_color='black',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.density_scatter_histogram_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='cmo.curl',\n",
    "    marker_color='white',\n",
    "    marker_size=2.5,\n",
    "    marker_style='d',\n",
    "    bin_x_number=21,\n",
    "    bin_y_number=21,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.histogram_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.histogram_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='svc.blue1',\n",
    "    bin_x_number=15,\n",
    "    bin_y_number=15,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    y_error_top=[element/10.0 for element in z],\n",
    "    y_error_bottom=[0.2]*len(y),\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    x_error_left=[element/30.0 for element in z],\n",
    "    x_error_right=[0.2]*len(y),\n",
    "    x_error_bar_color='black',\n",
    "    x_error_bar_line_width=0.3,\n",
    "    x_error_bar_size=1.5,\n",
    "    y_error_top=[element/30.0 for element in z],\n",
    "    y_error_bottom=[0.2]*len(y),\n",
    "    y_error_bar_color='black',\n",
    "    y_error_bar_line_width=0.3,\n",
    "    y_error_bar_size=1.5,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    marker_style='x',\n",
    "    marker_color='black',\n",
    "    marker_size=5,\n",
    "    show_line=True,\n",
    "    line_style='.',\n",
    "    line_color='#00a',\n",
    "    line_width=0.5,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    color=u,\n",
    "    marker_style='d',\n",
    "    x_tick_position=[-0.7, 0.7],\n",
    "    x_label=['Transition 1', 'Transition 2'],\n",
    "    show_x_grid=True,\n",
    "    x_grid_color='black',\n",
    "    x_grid_width=1.25,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=[u, u, u],\n",
    "    y=[v, w, x],\n",
    "    name=['var v', 'var w', 'var x'],\n",
    "    x_title='var u',\n",
    "    show_y_title=False,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=[u, u, u],\n",
    "    y=[v, w, x],\n",
    "    name=['var v', 'var w', 'var x'],\n",
    "    x_title='var u',\n",
    "    show_y_title=False,\n",
    "    marker_style=['>', '<', '^'],\n",
    "    marker_size=[3, 4, 5],\n",
    "    show_line=True,\n",
    "    line_style=['-', '--', '.'],\n",
    "    line_width=[0.3, 0.7, 1.1],\n",
    "    x_axis_range=[-5, +5],\n",
    "    y_axis_range=[-30, +30],\n",
    "    x_tick_position=range(-5, 5+1, 1),\n",
    "    y_tick_position=range(-30, +30+1, 5),\n",
    "    marker_opacity=0.5,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter(\n",
    "    x=[u, u, u],\n",
    "    y=[v, w, x],\n",
    "    name=['var v', 'var w', 'var x'],\n",
    "    x_title='var u',\n",
    "    show_y_title=False,\n",
    "    color=[u, 'black', 'gray'],\n",
    "    marker_style=['s', 'x', '+'],\n",
    "    marker_size=[6, 3.5, 3.5],\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3-dimensional plots\n",
    "\n",
    "The following shows plotting functions that accept three vectors via the arguments ``x``, ``y`` and ``z``, as well as some optional arguments to modify plot appearance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.contour(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=y,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.contour(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=y,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='spectral',\n",
    "    colormap_reversed=True,\n",
    "    interpolation_method='allrounder_nearest',\n",
    "    interpolation_num_x_gridpoints=20,\n",
    "    interpolation_num_y_gridpoints=20,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.heatmap(\n",
    "    x=range(len(u)),\n",
    "    y=['u', 'v', 'w', 'x', 'y', 'z'],\n",
    "    z=[u, v, w, x, y, z],\n",
    "    x_title='Item number',\n",
    "    x_tick_position=range(0, len(u), 5),\n",
    "    y_title='Variable',\n",
    "    y_axis_scale='categorical',\n",
    "    width_mm=250,\n",
    "    colormap='cet.linear_bgyw_20_98_c66',\n",
    "    height_mm=100,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter_3d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=w,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    z_title='var w',\n",
    "    show_x_grid=True,\n",
    "    show_y_grid=True,\n",
    "    show_z_grid=True,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.plotly.scatter_3d(\n",
    "    x=[u, u, u, u],\n",
    "    y=[v, v, v, v],\n",
    "    z=[w, x, y, z],\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    name=['var w', 'var x', 'var y', 'var z'],\n",
    "    show_z_title=False,\n",
    "    show_x_grid=True,\n",
    "    show_y_grid=True,\n",
    "    show_z_grid=True,\n",
    "    marker_size=5,\n",
    "    marker_style=['o', 's', 'x', 'd'],\n",
    "    axis_aspect_ratio=[1, 1, 0.5],\n",
    "    camera_position=[(0, 0, 1), (0, 0, 0), (2, 0.8, 1.0)],\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.plotly.scatter_3d(\n",
    "    x=[u, u, u],\n",
    "    y=[v, v, v],\n",
    "    z=[w, x, y],\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    name=['var w', 'var x', 'var y'],\n",
    "    show_z_title=False,\n",
    "    show_stem_x=True,\n",
    "    show_stem_y=True,\n",
    "    marker_size=3\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.plotly.scatter_3d(\n",
    "    x=[u, u],\n",
    "    y=[v, v],\n",
    "    z=[w, y],\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    z_title='var w',\n",
    "    show_interpolation_delaunay=True,\n",
    "    colormap=['Blues', 'Greens'],\n",
    "    marker_color='black',\n",
    "    marker_size=[8, 5],\n",
    "    marker_style=['+', 'd'],\n",
    "    axis_aspect_ratio=(1.2, 1.2, 0.7),\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.surface(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=w,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    z_title='var w',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.surface(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=w,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    z_title='var w',\n",
    "    colormap='cmo.curl',\n",
    "    show_x_grid=True,\n",
    "    show_y_grid=True,\n",
    "    show_z_grid=True,\n",
    "    show_projection_z=True,\n",
    "    interpolation_method='allrounder_nearest',\n",
    "    interpolation_num_x_gridpoints=20,\n",
    "    interpolation_num_y_gridpoints=20,\n",
    "    axis_aspect_ratio=[1, 1, 0.5],\n",
    "    camera_position=[(0, 0, 1), (0, 0, 0), (2, 0.5, 0.8)],\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### n-dimensional plots\n",
    "\n",
    "The following shows plotting functions that accept n vectors via the argument ``data``, as well as some optional arguments to modify plot appearance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.plotly.band(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.band(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    show_mean=True,\n",
    "    color='xkcd.dusty_teal',\n",
    "    show_x_grid=True,\n",
    "    rug_color='black',\n",
    "    rug_style='+',\n",
    "    rug_size=3,\n",
    "    rug_opacity=0.25,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.box(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.box(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    color=['gray', 'white'],\n",
    "    opacity=0.8,\n",
    "    orientation='horizontal',\n",
    "    box_width=0.8,\n",
    "    show_mean=False,\n",
    "    show_notch=True,\n",
    "    show_x_title=False,\n",
    "    show_y_title=False,\n",
    "    show_rug=False,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.density(\n",
    "    data= [u, v, w],\n",
    "    name=variable_names,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "up.plotly.density(\n",
    "    data= [u, v, w],\n",
    "    name=variable_names,\n",
    "    x_axis_range=[-20, 20],\n",
    "    x_tick_position=list(range(-20, 20+1, 2)),\n",
    "    y_axis_range=[0, 1],\n",
    "    y_tick_position=[0, 0.33, 0.66, 1],\n",
    "    show_rug=False,\n",
    "    bin_x_number=30,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.histogram(\n",
    "    data=[u, v, w],\n",
    "    name=variable_names,\n",
    "    x_title='Value',\n",
    "    y_title='Probability density',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.histogram(\n",
    "    data=[u, v, w],\n",
    "    name=variable_names,\n",
    "    x_title='Percent',\n",
    "    y_title='Value',\n",
    "    bar_mode='stack',\n",
    "    orientation='horizontal',\n",
    "    normalization='percent',\n",
    "    x_axis_range=[0, 100],\n",
    "    x_tick_position=[0, 25, 50, 75, 100],\n",
    "    bin_y_start=-20,\n",
    "    bin_y_stop=20,\n",
    "    bin_y_number=30,\n",
    "    y_axis_range=[-20, 20],\n",
    "    y_tick_position=list(range(-20, 20+1, 2)),\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.parallel_coordinates(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    height_mm=100,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.parallel_coordinates(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    height_mm=100,\n",
    "    colormap='Viridis',\n",
    "    label_color='gray',\n",
    "    num_significant_digits=4,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter_matrix(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter_matrix(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    show_upper_density=True,\n",
    "    show_lower_histogram=True,\n",
    "    marker_color='gray',\n",
    "    marker_size=1,\n",
    "    colormap='blues',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.scatter_matrix(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    color=u,\n",
    "    colormap='cmr.iceburn',\n",
    "    marker_size=2.5,\n",
    "    marker_style='d',\n",
    "    marker_opacity=0.5,\n",
    "    show_upper=False,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.violin(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.violin(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    color=['#005824', '#41ae76', '#99d8c9'],\n",
    "    opacity=0.8,\n",
    "    orientation='horizontal',\n",
    "    violin_width=0.5,\n",
    "    show_mean=True,\n",
    "    show_box=True,\n",
    "    scale_mode='count',\n",
    "    span_mode='hard',\n",
    "    side='both',\n",
    "    point_mode='outliers',\n",
    "    point_position=0,\n",
    "    point_jitter=0.3,\n",
    "    rug_color='black',\n",
    "    rug_style='d',\n",
    "    rug_size=4,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plot combinations\n",
    "\n",
    "The following shows how to combine different plotting functions with a simple plus operator between figure objects."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.bar(\n",
    "    x=list(range(len(x))),\n",
    "    y=x,\n",
    "    x_axis_range=[-1, len(x)+1],\n",
    "    y_axis_range=[min(x), max(x)],\n",
    "    x_tick_position=list(range(0, 100+1, 10)),\n",
    "    show_bartext=True,\n",
    "    bartext_color='black',\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.scatter(\n",
    "    x=list(range(len(x))),\n",
    "    y=x,\n",
    "    show_line=True,\n",
    "    color='black',\n",
    "    marker_style='d',\n",
    "    marker_size=3,\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.density_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='cmo.curl',\n",
    "    opacity=0.9\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    color='white',\n",
    "    marker_size=2,\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.histogram_2d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='svc.blue1',\n",
    "    bin_x_number=15,\n",
    "    bin_y_number=15,\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    marker_color='lightgray',\n",
    "    marker_style='square',\n",
    "    marker_size=3,\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.contour(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=y,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    colormap='cmo.curl'\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.scatter(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    marker_color='lightgray',\n",
    "    marker_style='+',\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.scatter_3d(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=w,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    z_title='var w',\n",
    "    marker_color='black',\n",
    "    marker_size=5,\n",
    "    show_stem_x=True,\n",
    "    show_stem_y=True,\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.surface(\n",
    "    x=u,\n",
    "    y=v,\n",
    "    z=w,\n",
    "    x_title='var u',\n",
    "    y_title='var v',\n",
    "    z_title='var w',\n",
    "    show_projection_x=True,\n",
    "    show_projection_y=True,\n",
    "    show_projection_z=True,\n",
    "    interpolation_method='rbf_cubic',\n",
    "    colormap='cmr.waterlily',\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.box(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    opacity=0.7,\n",
    "    show_x_title=False,\n",
    "    show_y_title=False,\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.violin(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    span_mode='hard',\n",
    "    opacity=0.3,\n",
    "    show_rug=False,\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig1 = up.plotly.violin(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    opacity=0.3,\n",
    "    orientation='horizontal',\n",
    "    violin_width=1,\n",
    "    side='positive',\n",
    "    show_rug=False,\n",
    "    show_x_title=False,\n",
    "    show_y_title=False,\n",
    "    x_axis_range=[-20, 20],\n",
    ")\n",
    "\n",
    "fig2 = up.plotly.box(\n",
    "    data=[u, v, w, x, y, z],\n",
    "    name=variable_names,\n",
    "    orientation='horizontal',\n",
    "    point_position=-2.0,\n",
    "    box_width=0.3,\n",
    "    show_x_title=False,\n",
    "    show_y_title=False,\n",
    "    x_axis_range=[-20, 20],\n",
    ")\n",
    "\n",
    "fig1 + fig2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dataset 2: Mixed vector data\n",
    "\n",
    "Both categorical and numerical vectors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n",
    "people = ['John', 'Jane', 'Rick']\n",
    "johns_hours = [4, 5, 1, 0, 2, 5, 7]\n",
    "janes_hours = [7, 8, 0, 1, 2, 6, 5]\n",
    "ricks_hours = [6, 7, 0, 1, 1, 4, 7]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2-dimensional plots (continued)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.bar(\n",
    "    x=days,\n",
    "    y=johns_hours,\n",
    "    x_axis_scale='cat',\n",
    "    show_bartext=True,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.bar(\n",
    "    x=[days, days, days],\n",
    "    y=[johns_hours, janes_hours, ricks_hours],\n",
    "    name=people,\n",
    "    orientation='horizontal',\n",
    "    y_axis_scale='cat',\n",
    "    show_bartext=True,\n",
    "    legend_position_vertical='center',\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3-dimensional plots (continued)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.heatmap(\n",
    "    x=days,\n",
    "    y=people,\n",
    "    z=[johns_hours, janes_hours, ricks_hours],\n",
    "    x_axis_scale='cat',\n",
    "    y_axis_scale='cat',\n",
    "    height_mm=100,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.contour(\n",
    "    x=days,\n",
    "    y=people,\n",
    "    z=[johns_hours, janes_hours, ricks_hours],\n",
    "    x_axis_scale='cat',\n",
    "    y_axis_scale='cat',\n",
    "    height_mm=100,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up.plotly.surface(\n",
    "    x=days,\n",
    "    y=people,\n",
    "    z=[johns_hours, janes_hours, ricks_hours],\n",
    "    x_axis_scale='cat',\n",
    "    y_axis_scale='cat',\n",
    "    axis_aspect_ratio=(1, 0.4, 0.3),\n",
    "    show_colormap=False,\n",
    "    show_projection_x=True,\n",
    "    show_projection_y=True,\n",
    "    show_projection_z=True,\n",
    "    height_mm=100,\n",
    ")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
